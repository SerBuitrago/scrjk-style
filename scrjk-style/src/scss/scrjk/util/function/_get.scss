@function getMap($map: (), $types:()){
    @if $map != $var-scrjk-txt-null{
        $aux: 1;
        $key: $map;
        @each $type in $types{
            @if $aux != -1{
                @if map-has-key($key, $type) {
                    $key: map-get($key, $type);
                    $aux: $aux + 1;
                }@else{
                    $aux: -1;
                }
            }
        }
        @if $aux != -1{
            @return $key;
        }@else{
            @error "Unknown `#{$types}` in `#{$map}`.";
        }
    }@else{
        @error "The map cannot be null.";
    }
    @return null;
}

@function getColor($color, $mode: $var-scrjk-txt-mode-light) {
    @if (lightness($color) > 50) {
      @return getMap($var-scrjk-json-color, (default, _black, $mode, value));
    } @else {
      @return  getMap($var-scrjk-json-color, (default, _white, $mode, value));
    }
}

@function getColorType($map: (), $key: "", $mode: $var-scrjk-txt-mode-light) {
    @if getMap($map, ($mode, bool, inside)){
        @return getMap($var-scrjk-json-color, (default, $key, $mode, value));
    }@else{
        @return getMap($map, ($mode, value));
    }
}

@function getFontFamilyGoogle(
    $map:(), 
    $family: getMap($var-scrjk-json-entry-layout, (text, all, family, option, info))
){
    $url: getMap($family, ("url"));
    $display: getMap($family, ("display"));
    $size: length($map);
    $aux: $url + "?";
    $i: 0;
    @each $key, $value in $map {
        $aux: $aux + getMap($value, ("alt"));
        $i: $i + 1;
        @if $i < $size { 
            $aux: $aux + "&"; 
        }
    }
    @return $aux;
}